// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class ContractSettingUpdated extends ethereum.Event {
  get params(): ContractSettingUpdated__Params {
    return new ContractSettingUpdated__Params(this);
  }
}

export class ContractSettingUpdated__Params {
  _event: ContractSettingUpdated;

  constructor(event: ContractSettingUpdated) {
    this._event = event;
  }

  get setting(): string {
    return this._event.parameters[0].value.toString();
  }

  get oldValue(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get newValue(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class FeeRecipientChanged extends ethereum.Event {
  get params(): FeeRecipientChanged__Params {
    return new FeeRecipientChanged__Params(this);
  }
}

export class FeeRecipientChanged__Params {
  _event: FeeRecipientChanged;

  constructor(event: FeeRecipientChanged) {
    this._event = event;
  }

  get oldRecipient(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newRecipient(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class ManualResolutionToggled extends ethereum.Event {
  get params(): ManualResolutionToggled__Params {
    return new ManualResolutionToggled__Params(this);
  }
}

export class ManualResolutionToggled__Params {
  _event: ManualResolutionToggled;

  constructor(event: ManualResolutionToggled) {
    this._event = event;
  }

  get enabled(): boolean {
    return this._event.parameters[0].value.toBoolean();
  }
}

export class MarketCreated extends ethereum.Event {
  get params(): MarketCreated__Params {
    return new MarketCreated__Params(this);
  }
}

export class MarketCreated__Params {
  _event: MarketCreated;

  constructor(event: MarketCreated) {
    this._event = event;
  }

  get marketId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get question(): string {
    return this._event.parameters[1].value.toString();
  }

  get optionA(): string {
    return this._event.parameters[2].value.toString();
  }

  get optionB(): string {
    return this._event.parameters[3].value.toString();
  }

  get category(): string {
    return this._event.parameters[4].value.toString();
  }

  get logoUrlA(): string {
    return this._event.parameters[5].value.toString();
  }

  get logoUrlB(): string {
    return this._event.parameters[6].value.toString();
  }

  get endTime(): BigInt {
    return this._event.parameters[7].value.toBigInt();
  }

  get oracleMatchId(): BigInt {
    return this._event.parameters[8].value.toBigInt();
  }
}

export class MarketRefunded extends ethereum.Event {
  get params(): MarketRefunded__Params {
    return new MarketRefunded__Params(this);
  }
}

export class MarketRefunded__Params {
  _event: MarketRefunded;

  constructor(event: MarketRefunded) {
    this._event = event;
  }

  get marketId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get reason(): string {
    return this._event.parameters[1].value.toString();
  }

  get resolvedBy(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class MarketResolved extends ethereum.Event {
  get params(): MarketResolved__Params {
    return new MarketResolved__Params(this);
  }
}

export class MarketResolved__Params {
  _event: MarketResolved;

  constructor(event: MarketResolved) {
    this._event = event;
  }

  get marketId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get outcome(): i32 {
    return this._event.parameters[1].value.toI32();
  }

  get source(): i32 {
    return this._event.parameters[2].value.toI32();
  }

  get details(): string {
    return this._event.parameters[3].value.toString();
  }

  get resolvedBy(): Address {
    return this._event.parameters[4].value.toAddress();
  }
}

export class OptionBought extends ethereum.Event {
  get params(): OptionBought__Params {
    return new OptionBought__Params(this);
  }
}

export class OptionBought__Params {
  _event: OptionBought;

  constructor(event: OptionBought) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get marketId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get isOptionA(): boolean {
    return this._event.parameters[2].value.toBoolean();
  }

  get amount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get timestamp(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class OptionSold extends ethereum.Event {
  get params(): OptionSold__Params {
    return new OptionSold__Params(this);
  }
}

export class OptionSold__Params {
  _event: OptionSold;

  constructor(event: OptionSold) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get marketId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get isOptionA(): boolean {
    return this._event.parameters[2].value.toBoolean();
  }

  get amount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get payout(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get timestamp(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }
}

export class OracleUpdaterChanged extends ethereum.Event {
  get params(): OracleUpdaterChanged__Params {
    return new OracleUpdaterChanged__Params(this);
  }
}

export class OracleUpdaterChanged__Params {
  _event: OracleUpdaterChanged;

  constructor(event: OracleUpdaterChanged) {
    this._event = event;
  }

  get oldUpdater(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newUpdater(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class OwnershipTransferStarted extends ethereum.Event {
  get params(): OwnershipTransferStarted__Params {
    return new OwnershipTransferStarted__Params(this);
  }
}

export class OwnershipTransferStarted__Params {
  _event: OwnershipTransferStarted;

  constructor(event: OwnershipTransferStarted) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Paused extends ethereum.Event {
  get params(): Paused__Params {
    return new Paused__Params(this);
  }
}

export class Paused__Params {
  _event: Paused;

  constructor(event: Paused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class PositionLost extends ethereum.Event {
  get params(): PositionLost__Params {
    return new PositionLost__Params(this);
  }
}

export class PositionLost__Params {
  _event: PositionLost;

  constructor(event: PositionLost) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get marketId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class PositionWon extends ethereum.Event {
  get params(): PositionWon__Params {
    return new PositionWon__Params(this);
  }
}

export class PositionWon__Params {
  _event: PositionWon;

  constructor(event: PositionWon) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get marketId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class ReferralFeeDistributed extends ethereum.Event {
  get params(): ReferralFeeDistributed__Params {
    return new ReferralFeeDistributed__Params(this);
  }
}

export class ReferralFeeDistributed__Params {
  _event: ReferralFeeDistributed;

  constructor(event: ReferralFeeDistributed) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get referrer(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get marketId(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class RefundClaimed extends ethereum.Event {
  get params(): RefundClaimed__Params {
    return new RefundClaimed__Params(this);
  }
}

export class RefundClaimed__Params {
  _event: RefundClaimed;

  constructor(event: RefundClaimed) {
    this._event = event;
  }

  get marketId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get user(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class Unpaused extends ethereum.Event {
  get params(): Unpaused__Params {
    return new Unpaused__Params(this);
  }
}

export class Unpaused__Params {
  _event: Unpaused;

  constructor(event: Unpaused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class UserLost extends ethereum.Event {
  get params(): UserLost__Params {
    return new UserLost__Params(this);
  }
}

export class UserLost__Params {
  _event: UserLost;

  constructor(event: UserLost) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get marketId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class UserWon extends ethereum.Event {
  get params(): UserWon__Params {
    return new UserWon__Params(this);
  }
}

export class UserWon__Params {
  _event: UserWon;

  constructor(event: UserWon) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get marketId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class WinningsClaimed extends ethereum.Event {
  get params(): WinningsClaimed__Params {
    return new WinningsClaimed__Params(this);
  }
}

export class WinningsClaimed__Params {
  _event: WinningsClaimed;

  constructor(event: WinningsClaimed) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get marketId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get payout(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get timestamp(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class PogPredict__getMarketInfoResult {
  value0: string;
  value1: string;
  value2: string;
  value3: string;
  value4: string;
  value5: string;
  value6: BigInt;
  value7: i32;
  value8: i32;
  value9: boolean;
  value10: BigInt;
  value11: BigInt;

  constructor(
    value0: string,
    value1: string,
    value2: string,
    value3: string,
    value4: string,
    value5: string,
    value6: BigInt,
    value7: i32,
    value8: i32,
    value9: boolean,
    value10: BigInt,
    value11: BigInt,
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
    this.value7 = value7;
    this.value8 = value8;
    this.value9 = value9;
    this.value10 = value10;
    this.value11 = value11;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromString(this.value0));
    map.set("value1", ethereum.Value.fromString(this.value1));
    map.set("value2", ethereum.Value.fromString(this.value2));
    map.set("value3", ethereum.Value.fromString(this.value3));
    map.set("value4", ethereum.Value.fromString(this.value4));
    map.set("value5", ethereum.Value.fromString(this.value5));
    map.set("value6", ethereum.Value.fromUnsignedBigInt(this.value6));
    map.set(
      "value7",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value7)),
    );
    map.set(
      "value8",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value8)),
    );
    map.set("value9", ethereum.Value.fromBoolean(this.value9));
    map.set("value10", ethereum.Value.fromUnsignedBigInt(this.value10));
    map.set("value11", ethereum.Value.fromUnsignedBigInt(this.value11));
    return map;
  }

  getQuestion(): string {
    return this.value0;
  }

  getOptionA(): string {
    return this.value1;
  }

  getOptionB(): string {
    return this.value2;
  }

  getCategory(): string {
    return this.value3;
  }

  getLogoUrlA(): string {
    return this.value4;
  }

  getLogoUrlB(): string {
    return this.value5;
  }

  getEndTime(): BigInt {
    return this.value6;
  }

  getOutcome(): i32 {
    return this.value7;
  }

  getStatus(): i32 {
    return this.value8;
  }

  getResolved(): boolean {
    return this.value9;
  }

  getTotalOptionA(): BigInt {
    return this.value10;
  }

  getTotalOptionB(): BigInt {
    return this.value11;
  }
}

export class PogPredict__getUserBalancesResult {
  value0: BigInt;
  value1: BigInt;

  constructor(value0: BigInt, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }

  getOptionA(): BigInt {
    return this.value0;
  }

  getOptionB(): BigInt {
    return this.value1;
  }
}

export class PogPredict__marketsResult {
  value0: string;
  value1: string;
  value2: string;
  value3: string;
  value4: string;
  value5: string;
  value6: BigInt;
  value7: i32;
  value8: i32;
  value9: boolean;
  value10: i32;
  value11: BigInt;
  value12: BigInt;
  value13: BigInt;
  value14: string;
  value15: BigInt;
  value16: Address;

  constructor(
    value0: string,
    value1: string,
    value2: string,
    value3: string,
    value4: string,
    value5: string,
    value6: BigInt,
    value7: i32,
    value8: i32,
    value9: boolean,
    value10: i32,
    value11: BigInt,
    value12: BigInt,
    value13: BigInt,
    value14: string,
    value15: BigInt,
    value16: Address,
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
    this.value7 = value7;
    this.value8 = value8;
    this.value9 = value9;
    this.value10 = value10;
    this.value11 = value11;
    this.value12 = value12;
    this.value13 = value13;
    this.value14 = value14;
    this.value15 = value15;
    this.value16 = value16;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromString(this.value0));
    map.set("value1", ethereum.Value.fromString(this.value1));
    map.set("value2", ethereum.Value.fromString(this.value2));
    map.set("value3", ethereum.Value.fromString(this.value3));
    map.set("value4", ethereum.Value.fromString(this.value4));
    map.set("value5", ethereum.Value.fromString(this.value5));
    map.set("value6", ethereum.Value.fromUnsignedBigInt(this.value6));
    map.set(
      "value7",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value7)),
    );
    map.set(
      "value8",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value8)),
    );
    map.set("value9", ethereum.Value.fromBoolean(this.value9));
    map.set(
      "value10",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value10)),
    );
    map.set("value11", ethereum.Value.fromUnsignedBigInt(this.value11));
    map.set("value12", ethereum.Value.fromUnsignedBigInt(this.value12));
    map.set("value13", ethereum.Value.fromUnsignedBigInt(this.value13));
    map.set("value14", ethereum.Value.fromString(this.value14));
    map.set("value15", ethereum.Value.fromUnsignedBigInt(this.value15));
    map.set("value16", ethereum.Value.fromAddress(this.value16));
    return map;
  }

  getQuestion(): string {
    return this.value0;
  }

  getOptionA(): string {
    return this.value1;
  }

  getOptionB(): string {
    return this.value2;
  }

  getCategory(): string {
    return this.value3;
  }

  getLogoUrlA(): string {
    return this.value4;
  }

  getLogoUrlB(): string {
    return this.value5;
  }

  getEndTime(): BigInt {
    return this.value6;
  }

  getOutcome(): i32 {
    return this.value7;
  }

  getStatus(): i32 {
    return this.value8;
  }

  getResolved(): boolean {
    return this.value9;
  }

  getResolutionSource(): i32 {
    return this.value10;
  }

  getOracleMatchId(): BigInt {
    return this.value11;
  }

  getTotalOptionA(): BigInt {
    return this.value12;
  }

  getTotalOptionB(): BigInt {
    return this.value13;
  }

  getResolutionDetails(): string {
    return this.value14;
  }

  getResolutionTimestamp(): BigInt {
    return this.value15;
  }

  getResolvedBy(): Address {
    return this.value16;
  }
}

export class PogPredict__validateOracleMatchResult {
  value0: boolean;
  value1: string;

  constructor(value0: boolean, value1: string) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromBoolean(this.value0));
    map.set("value1", ethereum.Value.fromString(this.value1));
    return map;
  }

  getValid(): boolean {
    return this.value0;
  }

  getReason(): string {
    return this.value1;
  }
}

export class PogPredict extends ethereum.SmartContract {
  static bind(address: Address): PogPredict {
    return new PogPredict("PogPredict", address);
  }

  cs2Oracle(): Address {
    let result = super.call("cs2Oracle", "cs2Oracle():(address)", []);

    return result[0].toAddress();
  }

  try_cs2Oracle(): ethereum.CallResult<Address> {
    let result = super.tryCall("cs2Oracle", "cs2Oracle():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  feeRecipient(): Address {
    let result = super.call("feeRecipient", "feeRecipient():(address)", []);

    return result[0].toAddress();
  }

  try_feeRecipient(): ethereum.CallResult<Address> {
    let result = super.tryCall("feeRecipient", "feeRecipient():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getMarketInfo(_marketId: BigInt): PogPredict__getMarketInfoResult {
    let result = super.call(
      "getMarketInfo",
      "getMarketInfo(uint256):(string,string,string,string,string,string,uint256,uint8,uint8,bool,uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(_marketId)],
    );

    return new PogPredict__getMarketInfoResult(
      result[0].toString(),
      result[1].toString(),
      result[2].toString(),
      result[3].toString(),
      result[4].toString(),
      result[5].toString(),
      result[6].toBigInt(),
      result[7].toI32(),
      result[8].toI32(),
      result[9].toBoolean(),
      result[10].toBigInt(),
      result[11].toBigInt(),
    );
  }

  try_getMarketInfo(
    _marketId: BigInt,
  ): ethereum.CallResult<PogPredict__getMarketInfoResult> {
    let result = super.tryCall(
      "getMarketInfo",
      "getMarketInfo(uint256):(string,string,string,string,string,string,uint256,uint8,uint8,bool,uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(_marketId)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new PogPredict__getMarketInfoResult(
        value[0].toString(),
        value[1].toString(),
        value[2].toString(),
        value[3].toString(),
        value[4].toString(),
        value[5].toString(),
        value[6].toBigInt(),
        value[7].toI32(),
        value[8].toI32(),
        value[9].toBoolean(),
        value[10].toBigInt(),
        value[11].toBigInt(),
      ),
    );
  }

  getPriceImpact(
    _marketId: BigInt,
    _ethIn: BigInt,
    isOptionA: boolean,
  ): BigInt {
    let result = super.call(
      "getPriceImpact",
      "getPriceImpact(uint256,uint256,bool):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_marketId),
        ethereum.Value.fromUnsignedBigInt(_ethIn),
        ethereum.Value.fromBoolean(isOptionA),
      ],
    );

    return result[0].toBigInt();
  }

  try_getPriceImpact(
    _marketId: BigInt,
    _ethIn: BigInt,
    isOptionA: boolean,
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getPriceImpact",
      "getPriceImpact(uint256,uint256,bool):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_marketId),
        ethereum.Value.fromUnsignedBigInt(_ethIn),
        ethereum.Value.fromBoolean(isOptionA),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getUserBalances(
    _marketId: BigInt,
    _user: Address,
  ): PogPredict__getUserBalancesResult {
    let result = super.call(
      "getUserBalances",
      "getUserBalances(uint256,address):(uint256,uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_marketId),
        ethereum.Value.fromAddress(_user),
      ],
    );

    return new PogPredict__getUserBalancesResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
    );
  }

  try_getUserBalances(
    _marketId: BigInt,
    _user: Address,
  ): ethereum.CallResult<PogPredict__getUserBalancesResult> {
    let result = super.tryCall(
      "getUserBalances",
      "getUserBalances(uint256,address):(uint256,uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_marketId),
        ethereum.Value.fromAddress(_user),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new PogPredict__getUserBalancesResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
      ),
    );
  }

  hasClaimed(param0: BigInt, param1: Address): boolean {
    let result = super.call(
      "hasClaimed",
      "hasClaimed(uint256,address):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromAddress(param1),
      ],
    );

    return result[0].toBoolean();
  }

  try_hasClaimed(
    param0: BigInt,
    param1: Address,
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "hasClaimed",
      "hasClaimed(uint256,address):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromAddress(param1),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  hasUserParticipated(param0: BigInt, param1: Address): boolean {
    let result = super.call(
      "hasUserParticipated",
      "hasUserParticipated(uint256,address):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromAddress(param1),
      ],
    );

    return result[0].toBoolean();
  }

  try_hasUserParticipated(
    param0: BigInt,
    param1: Address,
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "hasUserParticipated",
      "hasUserParticipated(uint256,address):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromAddress(param1),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  manualResolutionEnabled(): boolean {
    let result = super.call(
      "manualResolutionEnabled",
      "manualResolutionEnabled():(bool)",
      [],
    );

    return result[0].toBoolean();
  }

  try_manualResolutionEnabled(): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "manualResolutionEnabled",
      "manualResolutionEnabled():(bool)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  marketCount(): BigInt {
    let result = super.call("marketCount", "marketCount():(uint256)", []);

    return result[0].toBigInt();
  }

  try_marketCount(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("marketCount", "marketCount():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  marketCreationFee(): BigInt {
    let result = super.call(
      "marketCreationFee",
      "marketCreationFee():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_marketCreationFee(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "marketCreationFee",
      "marketCreationFee():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  markets(param0: BigInt): PogPredict__marketsResult {
    let result = super.call(
      "markets",
      "markets(uint256):(string,string,string,string,string,string,uint256,uint8,uint8,bool,uint8,uint256,uint256,uint256,string,uint256,address)",
      [ethereum.Value.fromUnsignedBigInt(param0)],
    );

    return new PogPredict__marketsResult(
      result[0].toString(),
      result[1].toString(),
      result[2].toString(),
      result[3].toString(),
      result[4].toString(),
      result[5].toString(),
      result[6].toBigInt(),
      result[7].toI32(),
      result[8].toI32(),
      result[9].toBoolean(),
      result[10].toI32(),
      result[11].toBigInt(),
      result[12].toBigInt(),
      result[13].toBigInt(),
      result[14].toString(),
      result[15].toBigInt(),
      result[16].toAddress(),
    );
  }

  try_markets(param0: BigInt): ethereum.CallResult<PogPredict__marketsResult> {
    let result = super.tryCall(
      "markets",
      "markets(uint256):(string,string,string,string,string,string,uint256,uint8,uint8,bool,uint8,uint256,uint256,uint256,string,uint256,address)",
      [ethereum.Value.fromUnsignedBigInt(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new PogPredict__marketsResult(
        value[0].toString(),
        value[1].toString(),
        value[2].toString(),
        value[3].toString(),
        value[4].toString(),
        value[5].toString(),
        value[6].toBigInt(),
        value[7].toI32(),
        value[8].toI32(),
        value[9].toBoolean(),
        value[10].toI32(),
        value[11].toBigInt(),
        value[12].toBigInt(),
        value[13].toBigInt(),
        value[14].toString(),
        value[15].toBigInt(),
        value[16].toAddress(),
      ),
    );
  }

  maxPosition(): BigInt {
    let result = super.call("maxPosition", "maxPosition():(uint256)", []);

    return result[0].toBigInt();
  }

  try_maxPosition(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("maxPosition", "maxPosition():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  minInitialPool(): BigInt {
    let result = super.call("minInitialPool", "minInitialPool():(uint256)", []);

    return result[0].toBigInt();
  }

  try_minInitialPool(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "minInitialPool",
      "minInitialPool():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  minPosition(): BigInt {
    let result = super.call("minPosition", "minPosition():(uint256)", []);

    return result[0].toBigInt();
  }

  try_minPosition(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("minPosition", "minPosition():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  optionABalance(param0: BigInt, param1: Address): BigInt {
    let result = super.call(
      "optionABalance",
      "optionABalance(uint256,address):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromAddress(param1),
      ],
    );

    return result[0].toBigInt();
  }

  try_optionABalance(
    param0: BigInt,
    param1: Address,
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "optionABalance",
      "optionABalance(uint256,address):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromAddress(param1),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  optionBBalance(param0: BigInt, param1: Address): BigInt {
    let result = super.call(
      "optionBBalance",
      "optionBBalance(uint256,address):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromAddress(param1),
      ],
    );

    return result[0].toBigInt();
  }

  try_optionBBalance(
    param0: BigInt,
    param1: Address,
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "optionBBalance",
      "optionBBalance(uint256,address):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromAddress(param1),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  oracleUpdater(): Address {
    let result = super.call("oracleUpdater", "oracleUpdater():(address)", []);

    return result[0].toAddress();
  }

  try_oracleUpdater(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "oracleUpdater",
      "oracleUpdater():(address)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  paused(): boolean {
    let result = super.call("paused", "paused():(bool)", []);

    return result[0].toBoolean();
  }

  try_paused(): ethereum.CallResult<boolean> {
    let result = super.tryCall("paused", "paused():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  pendingOwner(): Address {
    let result = super.call("pendingOwner", "pendingOwner():(address)", []);

    return result[0].toAddress();
  }

  try_pendingOwner(): ethereum.CallResult<Address> {
    let result = super.tryCall("pendingOwner", "pendingOwner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  referral(): Address {
    let result = super.call("referral", "referral():(address)", []);

    return result[0].toAddress();
  }

  try_referral(): ethereum.CallResult<Address> {
    let result = super.tryCall("referral", "referral():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  refundWindow(): BigInt {
    let result = super.call("refundWindow", "refundWindow():(uint256)", []);

    return result[0].toBigInt();
  }

  try_refundWindow(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("refundWindow", "refundWindow():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  sellFee(): BigInt {
    let result = super.call("sellFee", "sellFee():(uint256)", []);

    return result[0].toBigInt();
  }

  try_sellFee(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("sellFee", "sellFee():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  validateOracleMatch(
    _oracleMatchId: BigInt,
  ): PogPredict__validateOracleMatchResult {
    let result = super.call(
      "validateOracleMatch",
      "validateOracleMatch(uint256):(bool,string)",
      [ethereum.Value.fromUnsignedBigInt(_oracleMatchId)],
    );

    return new PogPredict__validateOracleMatchResult(
      result[0].toBoolean(),
      result[1].toString(),
    );
  }

  try_validateOracleMatch(
    _oracleMatchId: BigInt,
  ): ethereum.CallResult<PogPredict__validateOracleMatchResult> {
    let result = super.tryCall(
      "validateOracleMatch",
      "validateOracleMatch(uint256):(bool,string)",
      [ethereum.Value.fromUnsignedBigInt(_oracleMatchId)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new PogPredict__validateOracleMatchResult(
        value[0].toBoolean(),
        value[1].toString(),
      ),
    );
  }

  winningFee(): BigInt {
    let result = super.call("winningFee", "winningFee():(uint256)", []);

    return result[0].toBigInt();
  }

  try_winningFee(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("winningFee", "winningFee():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _initialFeeRecipient(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _oracleUpdater(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _referral(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AcceptOwnershipCall extends ethereum.Call {
  get inputs(): AcceptOwnershipCall__Inputs {
    return new AcceptOwnershipCall__Inputs(this);
  }

  get outputs(): AcceptOwnershipCall__Outputs {
    return new AcceptOwnershipCall__Outputs(this);
  }
}

export class AcceptOwnershipCall__Inputs {
  _call: AcceptOwnershipCall;

  constructor(call: AcceptOwnershipCall) {
    this._call = call;
  }
}

export class AcceptOwnershipCall__Outputs {
  _call: AcceptOwnershipCall;

  constructor(call: AcceptOwnershipCall) {
    this._call = call;
  }
}

export class BuyOptionCall extends ethereum.Call {
  get inputs(): BuyOptionCall__Inputs {
    return new BuyOptionCall__Inputs(this);
  }

  get outputs(): BuyOptionCall__Outputs {
    return new BuyOptionCall__Outputs(this);
  }
}

export class BuyOptionCall__Inputs {
  _call: BuyOptionCall;

  constructor(call: BuyOptionCall) {
    this._call = call;
  }

  get _marketId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _isOptionA(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class BuyOptionCall__Outputs {
  _call: BuyOptionCall;

  constructor(call: BuyOptionCall) {
    this._call = call;
  }
}

export class ClaimRefundCall extends ethereum.Call {
  get inputs(): ClaimRefundCall__Inputs {
    return new ClaimRefundCall__Inputs(this);
  }

  get outputs(): ClaimRefundCall__Outputs {
    return new ClaimRefundCall__Outputs(this);
  }
}

export class ClaimRefundCall__Inputs {
  _call: ClaimRefundCall;

  constructor(call: ClaimRefundCall) {
    this._call = call;
  }

  get _marketId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class ClaimRefundCall__Outputs {
  _call: ClaimRefundCall;

  constructor(call: ClaimRefundCall) {
    this._call = call;
  }
}

export class ClaimWinningsCall extends ethereum.Call {
  get inputs(): ClaimWinningsCall__Inputs {
    return new ClaimWinningsCall__Inputs(this);
  }

  get outputs(): ClaimWinningsCall__Outputs {
    return new ClaimWinningsCall__Outputs(this);
  }
}

export class ClaimWinningsCall__Inputs {
  _call: ClaimWinningsCall;

  constructor(call: ClaimWinningsCall) {
    this._call = call;
  }

  get _marketId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class ClaimWinningsCall__Outputs {
  _call: ClaimWinningsCall;

  constructor(call: ClaimWinningsCall) {
    this._call = call;
  }
}

export class CreateMarketCall extends ethereum.Call {
  get inputs(): CreateMarketCall__Inputs {
    return new CreateMarketCall__Inputs(this);
  }

  get outputs(): CreateMarketCall__Outputs {
    return new CreateMarketCall__Outputs(this);
  }
}

export class CreateMarketCall__Inputs {
  _call: CreateMarketCall;

  constructor(call: CreateMarketCall) {
    this._call = call;
  }

  get _question(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _optionA(): string {
    return this._call.inputValues[1].value.toString();
  }

  get _optionB(): string {
    return this._call.inputValues[2].value.toString();
  }

  get _category(): string {
    return this._call.inputValues[3].value.toString();
  }

  get _duration(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get _logoUrlA(): string {
    return this._call.inputValues[5].value.toString();
  }

  get _logoUrlB(): string {
    return this._call.inputValues[6].value.toString();
  }

  get _oracleMatchId(): BigInt {
    return this._call.inputValues[7].value.toBigInt();
  }
}

export class CreateMarketCall__Outputs {
  _call: CreateMarketCall;

  constructor(call: CreateMarketCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class EndMarketCall extends ethereum.Call {
  get inputs(): EndMarketCall__Inputs {
    return new EndMarketCall__Inputs(this);
  }

  get outputs(): EndMarketCall__Outputs {
    return new EndMarketCall__Outputs(this);
  }
}

export class EndMarketCall__Inputs {
  _call: EndMarketCall;

  constructor(call: EndMarketCall) {
    this._call = call;
  }

  get _marketId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _reason(): string {
    return this._call.inputValues[1].value.toString();
  }

  get withRefund(): boolean {
    return this._call.inputValues[2].value.toBoolean();
  }
}

export class EndMarketCall__Outputs {
  _call: EndMarketCall;

  constructor(call: EndMarketCall) {
    this._call = call;
  }
}

export class PauseCall extends ethereum.Call {
  get inputs(): PauseCall__Inputs {
    return new PauseCall__Inputs(this);
  }

  get outputs(): PauseCall__Outputs {
    return new PauseCall__Outputs(this);
  }
}

export class PauseCall__Inputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class PauseCall__Outputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class ResolveMarketFromOracleCall extends ethereum.Call {
  get inputs(): ResolveMarketFromOracleCall__Inputs {
    return new ResolveMarketFromOracleCall__Inputs(this);
  }

  get outputs(): ResolveMarketFromOracleCall__Outputs {
    return new ResolveMarketFromOracleCall__Outputs(this);
  }
}

export class ResolveMarketFromOracleCall__Inputs {
  _call: ResolveMarketFromOracleCall;

  constructor(call: ResolveMarketFromOracleCall) {
    this._call = call;
  }

  get _marketId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class ResolveMarketFromOracleCall__Outputs {
  _call: ResolveMarketFromOracleCall;

  constructor(call: ResolveMarketFromOracleCall) {
    this._call = call;
  }
}

export class ResolveMarketManuallyCall extends ethereum.Call {
  get inputs(): ResolveMarketManuallyCall__Inputs {
    return new ResolveMarketManuallyCall__Inputs(this);
  }

  get outputs(): ResolveMarketManuallyCall__Outputs {
    return new ResolveMarketManuallyCall__Outputs(this);
  }
}

export class ResolveMarketManuallyCall__Inputs {
  _call: ResolveMarketManuallyCall;

  constructor(call: ResolveMarketManuallyCall) {
    this._call = call;
  }

  get _marketId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _outcome(): i32 {
    return this._call.inputValues[1].value.toI32();
  }

  get _details(): string {
    return this._call.inputValues[2].value.toString();
  }
}

export class ResolveMarketManuallyCall__Outputs {
  _call: ResolveMarketManuallyCall;

  constructor(call: ResolveMarketManuallyCall) {
    this._call = call;
  }
}

export class SellOptionCall extends ethereum.Call {
  get inputs(): SellOptionCall__Inputs {
    return new SellOptionCall__Inputs(this);
  }

  get outputs(): SellOptionCall__Outputs {
    return new SellOptionCall__Outputs(this);
  }
}

export class SellOptionCall__Inputs {
  _call: SellOptionCall;

  constructor(call: SellOptionCall) {
    this._call = call;
  }

  get _marketId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _isOptionA(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }

  get _amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class SellOptionCall__Outputs {
  _call: SellOptionCall;

  constructor(call: SellOptionCall) {
    this._call = call;
  }
}

export class SetFeeRecipientCall extends ethereum.Call {
  get inputs(): SetFeeRecipientCall__Inputs {
    return new SetFeeRecipientCall__Inputs(this);
  }

  get outputs(): SetFeeRecipientCall__Outputs {
    return new SetFeeRecipientCall__Outputs(this);
  }
}

export class SetFeeRecipientCall__Inputs {
  _call: SetFeeRecipientCall;

  constructor(call: SetFeeRecipientCall) {
    this._call = call;
  }

  get _newRecipient(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetFeeRecipientCall__Outputs {
  _call: SetFeeRecipientCall;

  constructor(call: SetFeeRecipientCall) {
    this._call = call;
  }
}

export class SetMarketCreationFeeCall extends ethereum.Call {
  get inputs(): SetMarketCreationFeeCall__Inputs {
    return new SetMarketCreationFeeCall__Inputs(this);
  }

  get outputs(): SetMarketCreationFeeCall__Outputs {
    return new SetMarketCreationFeeCall__Outputs(this);
  }
}

export class SetMarketCreationFeeCall__Inputs {
  _call: SetMarketCreationFeeCall;

  constructor(call: SetMarketCreationFeeCall) {
    this._call = call;
  }

  get _fee(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetMarketCreationFeeCall__Outputs {
  _call: SetMarketCreationFeeCall;

  constructor(call: SetMarketCreationFeeCall) {
    this._call = call;
  }
}

export class SetMaxPositionCall extends ethereum.Call {
  get inputs(): SetMaxPositionCall__Inputs {
    return new SetMaxPositionCall__Inputs(this);
  }

  get outputs(): SetMaxPositionCall__Outputs {
    return new SetMaxPositionCall__Outputs(this);
  }
}

export class SetMaxPositionCall__Inputs {
  _call: SetMaxPositionCall;

  constructor(call: SetMaxPositionCall) {
    this._call = call;
  }

  get _maxPosition(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetMaxPositionCall__Outputs {
  _call: SetMaxPositionCall;

  constructor(call: SetMaxPositionCall) {
    this._call = call;
  }
}

export class SetMinInitialPoolCall extends ethereum.Call {
  get inputs(): SetMinInitialPoolCall__Inputs {
    return new SetMinInitialPoolCall__Inputs(this);
  }

  get outputs(): SetMinInitialPoolCall__Outputs {
    return new SetMinInitialPoolCall__Outputs(this);
  }
}

export class SetMinInitialPoolCall__Inputs {
  _call: SetMinInitialPoolCall;

  constructor(call: SetMinInitialPoolCall) {
    this._call = call;
  }

  get _minInitialPool(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetMinInitialPoolCall__Outputs {
  _call: SetMinInitialPoolCall;

  constructor(call: SetMinInitialPoolCall) {
    this._call = call;
  }
}

export class SetMinPositionCall extends ethereum.Call {
  get inputs(): SetMinPositionCall__Inputs {
    return new SetMinPositionCall__Inputs(this);
  }

  get outputs(): SetMinPositionCall__Outputs {
    return new SetMinPositionCall__Outputs(this);
  }
}

export class SetMinPositionCall__Inputs {
  _call: SetMinPositionCall;

  constructor(call: SetMinPositionCall) {
    this._call = call;
  }

  get _minPosition(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetMinPositionCall__Outputs {
  _call: SetMinPositionCall;

  constructor(call: SetMinPositionCall) {
    this._call = call;
  }
}

export class SetOracleCall extends ethereum.Call {
  get inputs(): SetOracleCall__Inputs {
    return new SetOracleCall__Inputs(this);
  }

  get outputs(): SetOracleCall__Outputs {
    return new SetOracleCall__Outputs(this);
  }
}

export class SetOracleCall__Inputs {
  _call: SetOracleCall;

  constructor(call: SetOracleCall) {
    this._call = call;
  }

  get _oracle(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _oracleUpdater(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class SetOracleCall__Outputs {
  _call: SetOracleCall;

  constructor(call: SetOracleCall) {
    this._call = call;
  }
}

export class SetReferralContractCall extends ethereum.Call {
  get inputs(): SetReferralContractCall__Inputs {
    return new SetReferralContractCall__Inputs(this);
  }

  get outputs(): SetReferralContractCall__Outputs {
    return new SetReferralContractCall__Outputs(this);
  }
}

export class SetReferralContractCall__Inputs {
  _call: SetReferralContractCall;

  constructor(call: SetReferralContractCall) {
    this._call = call;
  }

  get _newReferral(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetReferralContractCall__Outputs {
  _call: SetReferralContractCall;

  constructor(call: SetReferralContractCall) {
    this._call = call;
  }
}

export class SetRefundWindowCall extends ethereum.Call {
  get inputs(): SetRefundWindowCall__Inputs {
    return new SetRefundWindowCall__Inputs(this);
  }

  get outputs(): SetRefundWindowCall__Outputs {
    return new SetRefundWindowCall__Outputs(this);
  }
}

export class SetRefundWindowCall__Inputs {
  _call: SetRefundWindowCall;

  constructor(call: SetRefundWindowCall) {
    this._call = call;
  }

  get _window(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetRefundWindowCall__Outputs {
  _call: SetRefundWindowCall;

  constructor(call: SetRefundWindowCall) {
    this._call = call;
  }
}

export class SetSellFeeCall extends ethereum.Call {
  get inputs(): SetSellFeeCall__Inputs {
    return new SetSellFeeCall__Inputs(this);
  }

  get outputs(): SetSellFeeCall__Outputs {
    return new SetSellFeeCall__Outputs(this);
  }
}

export class SetSellFeeCall__Inputs {
  _call: SetSellFeeCall;

  constructor(call: SetSellFeeCall) {
    this._call = call;
  }

  get _fee(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetSellFeeCall__Outputs {
  _call: SetSellFeeCall;

  constructor(call: SetSellFeeCall) {
    this._call = call;
  }
}

export class SetWinningFeeCall extends ethereum.Call {
  get inputs(): SetWinningFeeCall__Inputs {
    return new SetWinningFeeCall__Inputs(this);
  }

  get outputs(): SetWinningFeeCall__Outputs {
    return new SetWinningFeeCall__Outputs(this);
  }
}

export class SetWinningFeeCall__Inputs {
  _call: SetWinningFeeCall;

  constructor(call: SetWinningFeeCall) {
    this._call = call;
  }

  get _fee(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetWinningFeeCall__Outputs {
  _call: SetWinningFeeCall;

  constructor(call: SetWinningFeeCall) {
    this._call = call;
  }
}

export class ToggleManualResolutionCall extends ethereum.Call {
  get inputs(): ToggleManualResolutionCall__Inputs {
    return new ToggleManualResolutionCall__Inputs(this);
  }

  get outputs(): ToggleManualResolutionCall__Outputs {
    return new ToggleManualResolutionCall__Outputs(this);
  }
}

export class ToggleManualResolutionCall__Inputs {
  _call: ToggleManualResolutionCall;

  constructor(call: ToggleManualResolutionCall) {
    this._call = call;
  }
}

export class ToggleManualResolutionCall__Outputs {
  _call: ToggleManualResolutionCall;

  constructor(call: ToggleManualResolutionCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class UnpauseCall extends ethereum.Call {
  get inputs(): UnpauseCall__Inputs {
    return new UnpauseCall__Inputs(this);
  }

  get outputs(): UnpauseCall__Outputs {
    return new UnpauseCall__Outputs(this);
  }
}

export class UnpauseCall__Inputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}

export class UnpauseCall__Outputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}

export class WithdrawMarketFundsCall extends ethereum.Call {
  get inputs(): WithdrawMarketFundsCall__Inputs {
    return new WithdrawMarketFundsCall__Inputs(this);
  }

  get outputs(): WithdrawMarketFundsCall__Outputs {
    return new WithdrawMarketFundsCall__Outputs(this);
  }
}

export class WithdrawMarketFundsCall__Inputs {
  _call: WithdrawMarketFundsCall;

  constructor(call: WithdrawMarketFundsCall) {
    this._call = call;
  }

  get _marketId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class WithdrawMarketFundsCall__Outputs {
  _call: WithdrawMarketFundsCall;

  constructor(call: WithdrawMarketFundsCall) {
    this._call = call;
  }
}
